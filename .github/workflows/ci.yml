name: project13 CI/CD

env:
  PYTHONPATH: ${{ github.workspace }}/demo_project13

on:
  push:
    branches: [ main, dev, 'feature/**', 'hotfix/**' ]
  pull_request:
    branches: [ main, dev ]

jobs:
  testing-linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout-Code
        uses: actions/checkout@v3

      - name: Setup-Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install-Dependencies
        run: pip install -r requirements.txt

      - name: Run-Tests
        run: python -m unittest discover -s tests -p "test_*.py"

      - name: Linters-Installation
        run: pip install ruff black

      - name: Ruff-Check
        run: ruff check .

      - name: Black-Check
        run: black --check .

  build:
    needs: testing-linting
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/hotfix/')

    steps:
      - name: Checkout-Code
        uses: actions/checkout@v3

      - name: DockerCompose-Copy
        env:
          ORACLE_SSHKEY: ${{ secrets.ORACLE_SSHKEY }}
          ORACLE_HOST: ${{ secrets.ORACLE_HOST }}
          ORACLE_IP: ${{ secrets.ORACLE_IP }}
        run: |
          mkdir -p ~/.ssh
          echo "$ORACLE_SSHKEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $ORACLE_IP >> ~/.ssh/known_hosts
          
          scp docker-compose.yml $ORACLE_HOST:docker-compose.yml

      - name: DockerHub-LogIn
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: DockerImage-BuildPush
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/demo_project13:v1.0.0

  deploy-prod:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: SSHClient-Install
        run: |
          sudo apt-get update
          sudo sudo apt-get install -y sshpass openssh-client

      - name: SSH-Setup
        env:
          ORACLE_IP: ${{ secrets.ORACLE_IP }}
          ORACLE_SSHKEY: ${{ secrets.ORACLE_SSHKEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$ORACLE_SSHKEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $ORACLE_IP >> ~/.ssh/known_hosts

      - name: App-Deploy
        env:
          ORACLE_HOST: ${{ secrets.ORACLE_HOST }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run:
          ssh $ORACLE_HOST "
            docker compose -f docker-compose.yml pull &&
            docker compose -p demo_project13 -f docker-compose.yml up -d 
          "

  flow-feature:
    needs: testing-linting
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature/')

    steps:
      - name: Tests-Success
        run: echo 'project13 tested'